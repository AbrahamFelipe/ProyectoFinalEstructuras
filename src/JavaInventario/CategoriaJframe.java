/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
//El mero proyecto sisas

package javainventario;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import static JavaInventario.Login.My_User_Connected;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author fabid
 */
public class CategoriaJframe extends javax.swing.JFrame {
    /**
     * Creates new form CategoriaJframe
     */
    
    public CategoriaJframe() {
        initComponents();
        metProducto();
    }
    
    Connection connection = null;
    Statement statement = null;
    ResultSet rs = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ID_categoria_categoria = new javax.swing.JTextField();
        Categoria_categoria = new javax.swing.JTextField();
        btnaniadircat = new javax.swing.JButton();
        btneliminarcat = new javax.swing.JButton();
        tablacat = new javax.swing.JScrollPane();
        Categorias_tabla = new javax.swing.JTable();
        btneditarcat = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btncategcat = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Inicio = new java.awt.Button();
        jLabel7 = new javax.swing.JLabel();
        ProductoBoton = new java.awt.Button();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Cliente = new java.awt.Button();
        jLabel10 = new javax.swing.JLabel();
        OrdenCompra = new java.awt.Button();
        jLabel11 = new javax.swing.JLabel();
        Usuario_Boton = new java.awt.Button();
        jLabel14 = new javax.swing.JLabel();
        Historial_Boton = new java.awt.Button();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jLabel1.setText("ID Categoría");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, -1, -1));

        jLabel2.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jLabel2.setText("Categoría");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, 83, -1));

        ID_categoria_categoria.setFont(new java.awt.Font("Maiandra GD", 1, 14)); // NOI18N
        jPanel1.add(ID_categoria_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 140, -1));

        Categoria_categoria.setFont(new java.awt.Font("Maiandra GD", 1, 14)); // NOI18N
        jPanel1.add(Categoria_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 160, 140, -1));

        btnaniadircat.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        btnaniadircat.setText("Añadir");
        btnaniadircat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnaniadircatMouseClicked(evt);
            }
        });
        jPanel1.add(btnaniadircat, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, 100, -1));

        btneliminarcat.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        btneliminarcat.setText("Eliminar");
        btneliminarcat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btneliminarcatMouseClicked(evt);
            }
        });
        jPanel1.add(btneliminarcat, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 300, 100, -1));

        Categorias_tabla = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        Categorias_tabla.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Categorias_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Categorias_tabla.getTableHeader().setReorderingAllowed(false);
        Categorias_tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Categorias_tablaMouseClicked(evt);
            }
        });
        tablacat.setViewportView(Categorias_tabla);

        jPanel1.add(tablacat, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 337, 207));

        btneditarcat.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        btneditarcat.setText("Editar");
        btneditarcat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btneditarcatMouseClicked(evt);
            }
        });
        jPanel1.add(btneditarcat, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 100, -1));

        jLabel6.setFont(new java.awt.Font("Roboto", 0, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 102, 255));
        jLabel6.setText("Categoría");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, -1, -1));

        btncategcat.setBackground(new java.awt.Color(0, 51, 204));
        btncategcat.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        btncategcat.setForeground(new java.awt.Color(255, 255, 255));
        btncategcat.setText("Categoría");
        btncategcat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btncategcat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncategcatActionPerformed(evt);
            }
        });
        jPanel1.add(btncategcat, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 120, 40));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Captura de pantalla 2022-05-12 141529.png"))); // NOI18N
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 60, 120));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home_icon.png"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, -1));

        Inicio.setActionCommand("Inicio");
        Inicio.setBackground(new java.awt.Color(0, 51, 204));
        Inicio.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        Inicio.setForeground(new java.awt.Color(255, 255, 255));
        Inicio.setLabel("Inicio");
        Inicio.setMinimumSize(new java.awt.Dimension(112, 27));
        Inicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InicioMouseClicked(evt);
            }
        });
        jPanel1.add(Inicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 120, 40));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/caja_icono.png"))); // NOI18N
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, -1, -1));

        ProductoBoton.setActionCommand("Producto");
        ProductoBoton.setBackground(new java.awt.Color(0, 51, 204));
        ProductoBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ProductoBoton.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        ProductoBoton.setForeground(new java.awt.Color(255, 255, 255));
        ProductoBoton.setLabel("Producto");
        ProductoBoton.setMinimumSize(new java.awt.Dimension(112, 27));
        ProductoBoton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductoBotonMouseClicked(evt);
            }
        });
        jPanel1.add(ProductoBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 120, 40));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/category_icon.png"))); // NOI18N
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/custome_icon.png"))); // NOI18N
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, -1, -1));

        Cliente.setActionCommand("Cliente");
        Cliente.setBackground(new java.awt.Color(0, 51, 204));
        Cliente.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        Cliente.setForeground(new java.awt.Color(255, 255, 255));
        Cliente.setLabel("Cliente");
        Cliente.setMinimumSize(new java.awt.Dimension(112, 27));
        Cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClienteActionPerformed(evt);
            }
        });
        jPanel1.add(Cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 120, 40));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/check_list_icon.png"))); // NOI18N
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 20, 30));

        OrdenCompra.setActionCommand("Orden de compra");
        OrdenCompra.setBackground(new java.awt.Color(0, 51, 204));
        OrdenCompra.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        OrdenCompra.setForeground(new java.awt.Color(255, 255, 255));
        OrdenCompra.setLabel("Orden de compra");
        OrdenCompra.setMinimumSize(new java.awt.Dimension(112, 27));
        OrdenCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrdenCompraMouseClicked(evt);
            }
        });
        jPanel1.add(OrdenCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, 120, 40));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/user_icon.png"))); // NOI18N
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 20, 30));

        Usuario_Boton.setActionCommand("Usuario");
        Usuario_Boton.setBackground(new java.awt.Color(0, 51, 204));
        Usuario_Boton.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        Usuario_Boton.setForeground(new java.awt.Color(255, 255, 255));
        Usuario_Boton.setLabel("Usuario");
        Usuario_Boton.setMinimumSize(new java.awt.Dimension(112, 27));
        Usuario_Boton.setName(""); // NOI18N
        Usuario_Boton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Usuario_BotonMouseClicked(evt);
            }
        });
        Usuario_Boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Usuario_BotonActionPerformed(evt);
            }
        });
        jPanel1.add(Usuario_Boton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, 120, 40));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/historial_icon.png"))); // NOI18N
        jLabel14.setToolTipText("");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, -1, -1));

        Historial_Boton.setActionCommand("Historial");
        Historial_Boton.setBackground(new java.awt.Color(0, 51, 204));
        Historial_Boton.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        Historial_Boton.setForeground(new java.awt.Color(255, 255, 255));
        Historial_Boton.setLabel("Historial");
        Historial_Boton.setMinimumSize(new java.awt.Dimension(112, 27));
        Historial_Boton.setName(""); // NOI18N
        Historial_Boton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Historial_BotonMouseClicked(evt);
            }
        });
        jPanel1.add(Historial_Boton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 450, 120, 40));

        jTextField1.setBackground(new java.awt.Color(0, 51, 204));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 270, 600));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btncategcatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncategcatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btncategcatActionPerformed

    public void metProducto(){
        
        try{
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/sistemainventario", "root", "");
            statement = connection.createStatement();
            rs = statement.executeQuery("SELECT * FROM categoria");
            Categorias_tabla.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(SQLException ex){
            
        }
    }
    
    private int get_names(String name){
        
        try{
            
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/sistemainventario", "root", "");
            statement = connection.createStatement();
            rs = statement.executeQuery("SELECT * FROM categoria");
            ArrayList<String> list_names = new ArrayList<String>();
            while(rs.next()){
                
                String MyCategory = rs.getString("Nombre");
                list_names.add(MyCategory);
            }
            
            boolean TheReturn = list_names.contains(name);
            if (TheReturn == true) return 1;
            else return 2;
            
        }catch(SQLException e){
            
            JOptionPane.showMessageDialog(this,"Error de conexion");
            
        }return 3;
        
    }
    
    public boolean condition_do(){
        
        try {
            int a = Integer.parseInt(ID_categoria_categoria.getText());
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    
    private void btnaniadircatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnaniadircatMouseClicked
        // TODO add your handling code here:
        
        try{
            boolean my_condition = condition_do();
            if(ID_categoria_categoria.getText().isEmpty() || Categoria_categoria.getText().isEmpty()){
            
                JOptionPane.showMessageDialog(this, "Falta información");
            }else if(my_condition == false){
                JOptionPane.showMessageDialog(this,"Datos Inválidos");

            }else if(Integer.valueOf(ID_categoria_categoria.getText()) > 0){
                connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/sistemainventario", "root", "");
                PreparedStatement add = connection.prepareStatement("INSERT INTO categoria VALUES(?,?)");
                add.setInt(1, Integer.valueOf(ID_categoria_categoria.getText()));
                add.setString(2, Categoria_categoria.getText());

                int condition;

                condition = get_names(Categoria_categoria.getText());
                int condition_ID_ = get_ID(Integer.valueOf(ID_categoria_categoria.getText()));

                if ((condition == 2) && (condition_ID_ == 2)){

                    int row = add.executeUpdate();
                    connection.close();
                    metProducto();
                }else if (condition == 1) JOptionPane.showMessageDialog(this,"La categoria ya existe");
                else if (condition_ID_ == 1) JOptionPane.showMessageDialog(this,"Este ID categoria ya existe");
                else JOptionPane.showMessageDialog(this,"Error de conexion");
            }else JOptionPane.showMessageDialog(this,"Introduzca un ID mayor a 0");
            
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this,"Error de conexion");
        }
    }//GEN-LAST:event_btnaniadircatMouseClicked

    private int get_ID(int ID_delete){
        
        try{
            
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/sistemainventario", "root", "");
            statement = connection.createStatement();
            rs = statement.executeQuery("SELECT * FROM categoria");
            ArrayList list_ID = new ArrayList();
            while(rs.next()){
                
                int MyID_delete = rs.getInt("ID");
                list_ID.add(MyID_delete);
            }
            
            boolean TheReturn_ID = list_ID.contains(ID_delete);
            if (TheReturn_ID == true) return 1;
            else return 2;
            
        }catch(SQLException e){
            
            JOptionPane.showMessageDialog(this,"Error de conexion");
            
        }return 3;
        
    }
    
    private int second_condition(int MyID){
        
        try{
            
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/sistemainventario", "root", "");
            statement = connection.createStatement();
            String Category_word = get_my_category(MyID);
            
            if (Category_word.equals("**")){
                
                JOptionPane.showMessageDialog(this,"Error de conexion");
                
            }else{
                rs = statement.executeQuery("SELECT * FROM producto WHERE ID_Categoria = '" + Category_word + "'");
                ArrayList<String> list_names = new ArrayList<String>();
                while(rs.next()){

                    String MyCategory = rs.getString("Nombre");
                    list_names.add(MyCategory);
                }
                if (list_names.size() == 0) return 1;
                else return 2;
            }
            
        }catch(SQLException e){
            
            JOptionPane.showMessageDialog(this,"Error de conexion");
            
        }return 3;
    }
    
    private void btneliminarcatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btneliminarcatMouseClicked
        // TODO add your handling code here:
        boolean my_condition = condition_do();
        if (ID_categoria_categoria.getText().isEmpty()){
            
            JOptionPane.showMessageDialog(this, "Seleccione ID de la \ncategoria que quiere eliminar");
            
        }else if(my_condition == false){
                JOptionPane.showMessageDialog(this,"Datos Inválidos");
        }else{
            
            try {
                connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/sistemainventario", "root", "");
                int MyID = Integer.valueOf(ID_categoria_categoria.getText());
                String SQLLanguage = "DELETE FROM categoria WHERE ID = " + MyID;
                Statement delete = connection.createStatement();
                
                int condition_delete;
                condition_delete = get_ID(MyID);
                
                if (condition_delete == 1){
                    int category_in_product;
                    category_in_product = second_condition(MyID);
                    if (category_in_product == 1){
                        delete.executeUpdate(SQLLanguage);
                        metProducto();
                    }else if (category_in_product == 2){
                        
                        int answer = JOptionPane.showConfirmDialog(this, "Existen productos asociados a esa categoria, \ndesea eliminarla igualmente??");
                        if(answer == JOptionPane.YES_OPTION){
                            
                            delete.executeUpdate(SQLLanguage);
                            JOptionPane.showMessageDialog(this, "Se elimino la categoria");
                            metProducto();
                            
                        }else JOptionPane.showMessageDialog(this, "No se elimino la categoria");
                    }else JOptionPane.showMessageDialog(this, "Error de conexion");
                }else if(condition_delete == 2) JOptionPane.showMessageDialog(this, "Introduzca un ID \nexistente");
                else JOptionPane.showMessageDialog(this, "Error de conexion");
                
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error de conexion");
            }
        }
    }//GEN-LAST:event_btneliminarcatMouseClicked

    private void change_category(String MyWord){
        
        try {
            
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/sistemainventario", "root", "");
            PreparedStatement statement = connection.prepareStatement("UPDATE producto SET ID_Categoria = ? WHERE ID_Categoria = ?");
            statement.setString(1, Categoria_categoria.getText());
            statement.setString(2, MyWord);
            
            int row = statement.executeUpdate();
            
        } catch (Exception e) {
        }
    }
    
    private String get_my_category(int MyID){
        
        try {
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/sistemainventario", "root", "");
            statement = connection.createStatement();
            rs = statement.executeQuery("SELECT * FROM categoria WHERE ID = " + MyID);
            String My_category_name = "";
            while(rs.next()){
                
                String MyName = rs.getString("Nombre");
                My_category_name += MyName;
            }
            
            return My_category_name;
            
        } catch (Exception e) {
        }
        return "**";
    }
    
    private int MyOld_ID(){
        
        try {
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/sistemainventario", "root", "");
            statement = connection.createStatement();
            rs = statement.executeQuery("Select * FROM categoria WHERE Nombre = '" + Categoria_categoria.getText() + "'");
            String Old_ID = "";
            while(rs.next()){
                
                String MyID_Old = rs.getInt("ID") + "";
                Old_ID += MyID_Old;
            }
            return Integer.valueOf(Old_ID);
        } catch (Exception e) {
        }return -1;
    }
    
    private void btneditarcatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btneditarcatMouseClicked
        // TODO add your handling code here:
        boolean my_condition = condition_do();
        if(ID_categoria_categoria.getText().isEmpty() || Categoria_categoria.getText().isEmpty()){
            
            JOptionPane.showMessageDialog(this, "Falta información");
        }else if(my_condition == false){
                JOptionPane.showMessageDialog(this,"Datos Inválidos");
            
        }else{
            try {
                connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/sistemainventario", "root", "");
                
                int MyID = Integer.valueOf(ID_categoria_categoria.getText());
                
                int condition_editar;
                condition_editar = get_ID(MyID);
                int condition_editar_2 = get_names(Categoria_categoria.getText());
                int Old_ID = MyOld_ID();
                
                if ((condition_editar == 1 && condition_editar_2 == 2) || (condition_editar == 1 && condition_editar_2 == 1 && (MyID == Old_ID))){
                    String old_category = get_my_category(MyID);
                    
                    if (old_category.equals("**")) {
                        JOptionPane.showMessageDialog(this, "Error de conexion");
                        
                    }else {
                        String SQLLanguage = "DELETE FROM categoria WHERE ID = " + MyID;
                        Statement delete = connection.createStatement();
                        delete.executeUpdate(SQLLanguage);

                        PreparedStatement add = connection.prepareStatement("INSERT INTO categoria VALUES(?,?)");
                        add.setInt(1, Integer.valueOf(ID_categoria_categoria.getText()));
                        add.setString(2, Categoria_categoria.getText());

                        int row = add.executeUpdate();
                        change_category(old_category);
                        connection.close();
                        metProducto();
                    }
                    
                }else if(condition_editar == 2) JOptionPane.showMessageDialog(this, "Introduzca un ID Categoria existente");
                else if(condition_editar_2 == 1) JOptionPane.showMessageDialog(this, "Introduzca un nombre Categoria no repetido");
                else JOptionPane.showMessageDialog(this, "Error de conexion");

            }catch (SQLException e) {
                
                JOptionPane.showMessageDialog(this, "No se puede editar la categoria");
                
            }
        }
    }//GEN-LAST:event_btneditarcatMouseClicked

    private void Categorias_tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Categorias_tablaMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)Categorias_tabla.getModel();
        int MyIndex = Categorias_tabla.getSelectedRow();
        ID_categoria_categoria.setText(model.getValueAt(MyIndex, 0).toString());
        Categoria_categoria.setText(model.getValueAt(MyIndex, 1).toString());
    }//GEN-LAST:event_Categorias_tablaMouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void InicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InicioMouseClicked
        // TODO add your handling code here:
        Inicio jfInicio =new Inicio();
        jfInicio.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_InicioMouseClicked

    private void ProductoBotonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductoBotonMouseClicked
        // TODO add your handling code here:
        ProductoJframe jfprod =new ProductoJframe();
        jfprod.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_ProductoBotonMouseClicked

    private void ClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClienteActionPerformed
        // TODO add your handling code here:
        Clientes jfCliente =new Clientes();
        jfCliente.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_ClienteActionPerformed

    private void OrdenCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrdenCompraMouseClicked
        // TODO add your handling code here:
        Orden_de_Compra odp = new Orden_de_Compra();
        odp.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_OrdenCompraMouseClicked

    private void Usuario_BotonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Usuario_BotonMouseClicked
        // TODO add your handling code here:
        if (My_User_Connected.equals("Administrador")){
            Usuarios My_User = new Usuarios();
            My_User.setVisible(true);
            this.setVisible(false);
        }else JOptionPane.showMessageDialog(this,"Usted no tiene acceso a esta sección");
    }//GEN-LAST:event_Usuario_BotonMouseClicked

    private void Historial_BotonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Historial_BotonMouseClicked
        // TODO add your handling code here:
        Historial jfHistorial =new Historial();
        jfHistorial.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_Historial_BotonMouseClicked

    private void Usuario_BotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Usuario_BotonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Usuario_BotonActionPerformed
         
         
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoriaJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CategoriaJframe().setVisible(true);
        });
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Categoria_categoria;
    private javax.swing.JTable Categorias_tabla;
    private java.awt.Button Cliente;
    private java.awt.Button Historial_Boton;
    private javax.swing.JTextField ID_categoria_categoria;
    private java.awt.Button Inicio;
    private java.awt.Button OrdenCompra;
    private java.awt.Button ProductoBoton;
    private java.awt.Button Usuario_Boton;
    private javax.swing.JButton btnaniadircat;
    private javax.swing.JButton btncategcat;
    private javax.swing.JButton btneditarcat;
    private javax.swing.JButton btneliminarcat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JScrollPane tablacat;
    // End of variables declaration//GEN-END:variables
}
